import { G1Element, G2Element, Scalar } from "./bls12381.js";
function elgamalDecrypt(sk, [c0, c1]) {
  return decrypt(Scalar.fromBytes(sk), [
    G1Element.fromBytes(c0),
    G1Element.fromBytes(c1)
  ]).toBytes();
}
function decrypt(sk, [c0, c1]) {
  return c1.subtract(c0.multiply(sk));
}
function generateSecretKey() {
  return Scalar.random().toBytes();
}
function toPublicKey(sk) {
  return G1Element.generator().multiply(Scalar.fromBytes(sk)).toBytes();
}
function toVerificationKey(sk) {
  return G2Element.generator().multiply(Scalar.fromBytes(sk)).toBytes();
}
export {
  elgamalDecrypt,
  generateSecretKey,
  toPublicKey,
  toVerificationKey
};
//# sourceMappingURL=elgamal.js.map
